<?php
/**
 * Text Highlight Format - Enqueue scripts and styles
 *
 * A custom RichText format that allows users to wrap selected text in a span tag
 * for custom styling. This file handles the registration and enqueueing of assets
 * for both the editor and frontend.
 *
 * @package Prolific_Blocks
 * @since 1.0.0
 */

if (!defined('ABSPATH')) {
	exit; // Exit if accessed directly.
}

/**
 * Enqueue text highlight format scripts and styles for the block editor
 *
 * This function loads the JavaScript and CSS needed for the text highlight format
 * to work in the WordPress block editor. It uses the asset file generated by
 * @wordpress/scripts to ensure proper dependency management.
 *
 * @since 1.0.0
 * @return void
 */
function prolific_enqueue_text_highlight_format_editor_assets() {
	// Get the asset file for dependency and version management
	$asset_file = include plugin_dir_path(__FILE__) . '../../build/text-highlight-format/index.asset.php';

	// Enqueue the JavaScript for the format
	wp_enqueue_script(
		'prolific-text-highlight-format',
		plugins_url('build/text-highlight-format/index.js', dirname(__FILE__, 2)),
		$asset_file['dependencies'],
		$asset_file['version'],
		true // Load in footer
	);

	// Enqueue editor styles (includes both editor and frontend styles)
	wp_enqueue_style(
		'prolific-text-highlight-format-editor',
		plugins_url('build/text-highlight-format/index.css', dirname(__FILE__, 2)),
		array('wp-edit-blocks'), // Depend on WordPress editor styles
		$asset_file['version']
	);

	// Add inline script for format configuration (optional)
	$format_config = array(
		'formatName' => 'prolific/text-highlight',
		'presets' => array(
			'highlight' => array(
				'label' => __('Highlight', 'prolific-blocks'),
				'backgroundColor' => '#ffeb3b',
				'color' => '#000000'
			),
			'accent' => array(
				'label' => __('Accent', 'prolific-blocks'),
				'backgroundColor' => '#2196f3',
				'color' => '#ffffff'
			),
			'underline' => array(
				'label' => __('Underline', 'prolific-blocks'),
				'borderColor' => '#2196f3'
			),
			'badge' => array(
				'label' => __('Badge', 'prolific-blocks'),
				'backgroundColor' => '#2196f3',
				'color' => '#ffffff'
			)
		)
	);

	wp_localize_script(
		'prolific-text-highlight-format',
		'prolificTextHighlightConfig',
		$format_config
	);
}
add_action('enqueue_block_editor_assets', 'prolific_enqueue_text_highlight_format_editor_assets');

/**
 * Enqueue text highlight format styles for the frontend
 *
 * This function loads the CSS needed for the text highlight format to display
 * correctly on the frontend of the website.
 *
 * @since 1.0.0
 * @return void
 */
function prolific_enqueue_text_highlight_format_frontend_assets() {
	// Get the asset file for version management
	$asset_file_path = plugin_dir_path(__FILE__) . '../../build/text-highlight-format/index.asset.php';

	// Check if the asset file exists before including
	if (file_exists($asset_file_path)) {
		$asset_file = include $asset_file_path;
		$version = $asset_file['version'];
	} else {
		// Fallback to plugin version if asset file doesn't exist
		$plugin_data = get_file_data(
			dirname(__FILE__, 2) . '/prolific-blocks.php',
			array('Version' => 'Version'),
			'plugin'
		);
		$version = $plugin_data['Version'];
	}

	// Enqueue frontend styles
	wp_enqueue_style(
		'prolific-text-highlight-format-frontend',
		plugins_url('build/text-highlight-format/index.css', dirname(__FILE__, 2)),
		array(),
		$version
	);
}
add_action('wp_enqueue_scripts', 'prolific_enqueue_text_highlight_format_frontend_assets');

/**
 * Add custom format to allowed HTML for posts
 *
 * This ensures that our custom span attributes are preserved when content is saved.
 *
 * @since 1.0.0
 * @param array $allowed_tags Allowed HTML tags.
 * @return array Modified allowed tags.
 */
function prolific_text_highlight_format_allowed_html($allowed_tags) {
	// Ensure span tag is in allowed tags
	if (!isset($allowed_tags['span'])) {
		$allowed_tags['span'] = array();
	}

	// Add our custom attributes
	$allowed_tags['span']['class'] = true;
	$allowed_tags['span']['style'] = true;
	$allowed_tags['span']['data-style'] = true;

	return $allowed_tags;
}
add_filter('wp_kses_allowed_html', 'prolific_text_highlight_format_allowed_html', 10, 1);

/**
 * Register format type metadata
 *
 * This provides additional metadata about the format to WordPress
 *
 * @since 1.0.0
 * @return void
 */
function prolific_register_text_highlight_format_metadata() {
	// Register format metadata (for future WordPress versions that may use this)
	if (function_exists('register_block_type_from_metadata')) {
		// The block.json file contains metadata for the build system
		// This is primarily used by @wordpress/scripts for webpack configuration
		$metadata_path = plugin_dir_path(__FILE__) . 'block.json';

		if (file_exists($metadata_path)) {
			// Metadata is registered but not as a block type
			// This is just for organizational purposes and build system
		}
	}
}
add_action('init', 'prolific_register_text_highlight_format_metadata');

/**
 * Add keyboard shortcut information to the editor
 *
 * This adds helpful information about the Ctrl+Shift+H shortcut
 *
 * @since 1.0.0
 * @return void
 */
function prolific_text_highlight_format_keyboard_shortcuts() {
	// Add keyboard shortcut registration
	// This will be handled by the JavaScript, but we can add server-side
	// configuration if needed in the future
}
add_action('admin_init', 'prolific_text_highlight_format_keyboard_shortcuts');
